################################################################################
# Copyright (c) 2003 Andy Jefferson and others. All rights reserved. 
# This program and the accompanying materials are made available under 
# the terms of the JPOX License v1.0 which accompanies this distribution.
#
# Resources for org.jpox.store package
# Version : $Revision: 1.35.2.1 $
################################################################################
#
# Store Manager
#
StoreManager.Unavailable=No Store Manager is available for this JDO implementation : {0}
StoreManager.AddStoreData=Managing Persistence of {0}
StoreManager.RemoveStoreData=Unmanaging Persistence of all classes
StoreManager.AddPreviousStoreData=Managing Persistence of {0} since it was managed previously

StoreManager.InsertObjectWhileReadOnlyError=Insert of object "{0}" for read-only datastore! You should make this datastore read-write if you want to insert objects
StoreManager.InsertObjectWhileReadOnlyIgnore=Insert of object "{0}" into read-only datastore will be ignored.
StoreManager.UpdateObjectWhileReadOnlyError=Update of object "{0}" for read-only datastore! You should make this datastore read-write if you want to update objects
StoreManager.UpdateObjectWhileReadOnlyIgnore=Update of object "{0}" into read-only datastore will be ignored.
StoreManager.DeleteObjectWhileReadOnlyError=Delete of object "{0}" for read-only datastore! You should make this datastore read-write if you want to delete objects
StoreManager.DeleteObjectWhileReadOnlyIgnore=Delete of object "{0}" from read-only datastore will be ignored.
StoreManager.DeleteDependentObjectWhileReadOnlyError=Delete dependent of object "{0}" from read-only datastore! You should make this datastore read-write if you want to delete objects
StoreManager.DeleteDependentObjectWhileReadOnlyIgnore=Delete dependent of object "{0}" from read-only datastore will be ignored.

StoreManager.NoTableForEmbeddedClass=The class "{0}" is tagged as "embedded-only" so does not have its own datastore table.
StoreManager.NoTableForClass=The class "{0}" is using no-table strategy and no subclass/superclass has defined a table.
StoreManager.CantFindTableForClass=The class "{0}" is using {1} strategy and no table were found to persist the object.
StoreManager.TableRetrievalError=Attempt to retrieve table name for null class !

StoreManager.NoTableForClass=The class "{0}" is using no-table strategy and no subclass/superclass has defined a table.

#
# Extent
#
Extent.ClassNameNotSpecified=Extent cannot be created for class because the class name hasn't been specified.
Extent.ClassHasNoMetaData=Extent cannot be created for class "{0}" because no Meta-Data was found for this class.
Extent.ClassExtentInfo=Extent of {0} include_subclasses={1}

#
# Auto Starter
#
AutoStarter.ClassNotFoundError=Error starting up JPOX : a class "{0}" was listed as being persisted previously in this datastore, yet the class wasn't found. Perhaps it is used by a different JPOX-enabled application in this datastore, or you have changed your class names.
AutoStarter.DeleteClass=Deleting class {0} from list of persistence-managed classes
AutoStarter.UnknownError=Unknown Error during auto starter execution. : {0}
AutoStarter.IllegalStateDisablingAutoStart=Illegal state of AutoStart, disabling it. To enable it, resolve earlier errors.

ClassesAutoStarter.StorageDescription=Class based auto-start. You provide a list of classes to load up when initialising the PMF.

XMLAutoStarter.StorageDescription=XML file based auto-start. Stores definition in an XML file
XMLAutoStarter.StartupFileNonExistent=XML AutoStarter file {0} doesn't exist. Creating it ...
XMLAutoStarter.ErrorReadingStartupFile=Error reading XML AutoStarter file {0} : {1}
XMLAutoStarter.ErrorWritingStartupFile=Error writing XML AutoStarter file {0} : {1}
XMLAutoStarter.ResolveEntity=resolveEntity({0}, {1})

#
# Store Data
#
StoreData.MetaDataNullError=MetaData cannot be null : table = {0}
StoreData.TableNullError=Table cannot be null
StoreData.DataForClass=Class : {0} [Table : {1}, InheritanceStrategy : {2}]
StoreData.DataForField=Field : {0} [Table : {1}]

#
# Datastore Adapter
#
DatastoreAdapter.MappingConstructorMissing=Missing constructor {0}(ClassBaseTable,int)
DatastoreAdapter.MappingFieldNotSupported=Fields of type {0} not (yet) supported
DatastoreAdapter.MappingFieldError={0} can only be used with a persistence-capable field
DatastoreAdapter.DataStoreMappingFileNotInClassPath=Datastore Mapping mappings have been defined to be in file "{0}" yet this file can't be found in the classpath.

#
# JDOQL Expressions
#
InterfaceExpression.AccessFieldInvalid=Cannot perform navigation on field "{0}" in "{1}". Cast the interface to a concrete type and then access the field.
TableExpression.QueryFieldNonExistent=Query has been specified to refer to field "{0}", but the query table "{1}" in use doesn't have a column for this field
TableExpression.QuerySubFieldNonExistent=Query has been specified to refer to field "{0}" has been specified, but the subfield "{1}" doesnt exist in base field "{2}"
ObjectLiteral.ComparisonWithObjectWithoutId=Query has been specified to compare with an object "{0}" which has no JDO identity - maybe the object is transient or embedded. This will always return no instances.
CollectionExpression.EqualsNotNullInvalid=Query has been specified to compare a collection with a non-null value. JPOX doesn't currently support this.

ObjectExpression.AccessFieldUsingSubclassTableWithNoSubclasses=Query has been specified to refer to the field "{0}" yet this field relates to a class using "subclass-table" inheritance strategy, and has no possible subclasses with their own tables. A JDOQL query cannot be formed in this situation.
ObjectExpression.AccessFieldUsingSubclassTableMoreThanOneSubclass=Query has been specified to refer to the field "{0}" yet this field relates to a class using "subclass-table" inheritance strategy. JPOX only currently supports a 1-1 relation to a "subclass-table" class when there is only one subclass possible, but here there are more than 1! JPOX will use "{1}"
ObjectExpression.InstanceOfNotClassExpression=Attempt to compare the instanceof an object and compare it to an expression of type "{0}". JDOQL only allows comparison with a class.

ClassExpression.MethodNotPublicStaticFinal=Attempt to invoke the method "{0}" on the class "{1}", yet the method is not public static final. This isnt supported in JDOQL.
ClassExpression.MethodNotFoundForClass=Attempt to invoke the method "{0}" on the class "{1}", yet this method doesnt exist!
ClassExpression.InstanceofClassNotFound=JDOQL operator "instanceof" has been specified with class "{0}", yet this class is not found. Please check your CLASSPATH!

AggregateExpression.FunctionRequiresNumericArgument=Attempt to invoke the aggregate expression "{0}" with an argument that is not numeric. This expression can only be used with an argument that has numeric type.
AggregateExpression.FunctionCannotUseDistinct=Attempt to use DISTINCT with the aggregate expression "{0}". This is invalid.

NewObjectExpression.ConstructorNotFound=JDOQL query has been specified with a new object expression for a constructor for class "{0}" that doesnt exist! Please correct the query.
NewObjectExpression.ConstructorArgumentMismatch=Attempt to create new object from JDOQL query with "{0}" values yet "{1}" are required
NewObjectExpression.ConstructorFailure=Error occurred when creating new instance of "{0}" : {1}

#
# Statement Text
#
StatementText.InvalidParameter=No such statement parameter : {0}

#
# OID
#
OID.InvalidValue=Invalid OID string value : {0}

Identity.AssignedToIncorrectClass=Identity "{0}" is assigned to class "{1}", but it's not the correct object-id type for this class.

#
# Identifiers
#
IdentifierFactory.Initialised=Datastore Identifiers will be created using factory "{0}" with case {1}
IdentifierFactory.CaseNotSupported=Case Identifier "{0}" is not supported. Please choose a supported case
IdentifierFactory.CaseNotAvailableForDatastoreUsingAlternative=Identifier Factory required identifiers in "{0}" but datastore adapter doesnt support this exactly, so using "{1}" instead
IdentifierFactory.CaseNotAvailableForDatastore=Identifier Factory requires identifiers in "{0}" but this is impossible with the current datastore adapter.

IdentifierFactory.FactoryNotFound=Identifier Factory with name "{0}" is not registered! Please check your CLASSPATH for presence of the plugin containing this factory, and your PMF settings for identifier factory.
IdentifierFactory.FactoryClassNotFound=Identifier Factory "{0}" is registered to use class "{1}" yet this class is not found. Please check the plugin specification and the CLASSPATH
IdentifierFactory.FactoryError=Identifier Factory "{0}" has thrown an error upon construction. Please check the validity of the IdentifierFactory plugin.

#
# Poid Generators
#
PoidManager.InvalidGeneratorType=Unable to create generator for ids of type "{0}" : {1}

PoidGenerator.RepositoryOfIdsInvalid=Repository of unique IDs is not valid.
PoidGenerator.BlockAllocationError=Error encountered allocating block of IDs : {0}
PoidGenerator.CreatingRepository=Creating Repository for IDs in the datastore
PoidGenerator.InvalidKeyCacheSize=Invalid value for key-cache-size = {0}
PoidGenerator.IDAllocationError=Error encountered allocating IDs : {0}
PoidGenerator.NotNumericError=The generator "{0}" does not generate numeric values. Please use the "next()" method to access the Object value.

#
# Mapping
#
MappingManager.NoMappingForJavaType=The Java type {0} has no known mapping class available in JPOX.
MappingManager.NoMappingForJavaTypeField=The field "{0}" with Java type {1} has no known mapping class available in JPOX.
MappingManager.NoMappingForEmbeddedJavaType=The field "{0}" of Java type {1} while specified as "embedded" has no known mapping class available in JPOX.
MappingManager.EmbeddedContainersNotYetSupported=The field "{0}" is specified as an embedded Collection/Map, but JPOX doesnt yet support embedded Collections/Maps.

Mapping.FailureMessage=Somehow {0}.{1}() was called, which should have been impossible!
Mapping.NoSuchConstructor=Constructor ({0},{1}) not found for Mapping type {2}
Mapping.NoSuchConstructor2=Constructor ({0},{1},{2}) not found for Mapping type {3}
Mapping.NoSuchConstructor3=Constructor ({0},{1},{2},{3}) not found for Mapping type {4}
Mapping.ConstructionFailure=Failed to generate new Mapping of type {0}, exception : {1}
Mapping.ConstructionFailure2=Failed to generate new Mapping of type {0} for table {1}, field {2}, exception : {3}
Mapping.ConstructorMissing=Missing constructor {0}(ClassTable, int)

Mapping.MappingFieldError={0} can only be used with a persistence-capable field
Mapping.DatastoreMappingClassNotFound=The plugin.xml has specified a datastore-mapping class of "{0}" yet this is not found

Mapping.UserMappingClassNotFound=Field "{0}" has been specified to use a mapping class "{1}" yet this class was not found! Please check your metadata and respecify the mapping class.

Mapping.FieldNotAssignableIsFromAnotherPM=Cannot assign field to an object from a different PersistenceManager
Mapping.ObjectIsNotPersistenceCapable=Object is not a PersistenceCapable instance. Object class = {0}, value = {1}
Mapping.CannotSetAppIDParameter=Can't set Application ID parameter. Parameter = {0}

ContainerMapping.ContainerMetaDataError=Specified field "{0}" has no container (collection/map/array) MetaData!
ContainerMapping.SCOWrapperClassConstructionFailure=Failure creating an object of class "{0}" : {1}
ContainerMapping.QueryInvalidIfSerialised=Impossible to query a collection/map field ("{0}") when it is serialised. Either change your query, or change the field to not be serialised.
ContainerMapping.NewWrapperTypeNotValid=Class {0} not supported as a Second-Class object

ArrayMapping.QueryInvalidIfSingleColumn=Impossible to query an array field ("{0}") when it is stored in a single column. Either change your query, or change the field to not be stored like this.

BigIntegerMapping.SetError=Can't set BigInteger parameter : value = {0}
BigIntegerMapping.GetError=Can't get BigInteger result : param = {0}
BigDecimalMapping.SetError=Can't set BigDecimal parameter : value = {0}
BigDecimalMapping.GetError=Can't get BigDecimal result : param = {0}

ObjectMapping.SetError=Can't set Object parameter : value = {0}
ObjectMapping.GetError=Can't get Object result : param = {0}

URLMapping.GetError=Can't get URL result : param = {0}, value = {1}

OIDMapping.GetObject=Retrieved object with OID "{0}"
OIDMapping.GetObjectError=Failed to retrieve OID for object

PersistenceCapableMapping.CantCreateAID=Error creating AID of type {0} : exception is {1}
PersistenceCapableMapping.CantCreateAIDWithReflection=Error creating AID of type {0}, field {1}, value {2} : exception is {3}
PersistenceCapableMapping.PrimaryKeyColumnNotMapped=Primary Key column "{0}" for table "{1}" is not mapped.
PersistenceCapableMapping.CantCreateSingleFieldIdentityWithNull=Cannot create SingleFieldIdentity type since the key value retrieved from the datastore is NULL!

InterfaceMapping.SerialisedNotSupported=Field "{0}" is specified as serialised. JPOX doesnt currently support the persistence of serialised Interface fields.
InterfaceMapping.EmbeddedNotSupported=Field "{0}" is specified as embedded. JPOX doesnt currently support the persistence of embedded Interface fields.

ObjectMapping.EmbeddedNotSupported=Field "{0}" is specified as embedded. JPOX doesnt currently support the persistence of embedded Object fields.
ObjectMapping.NonSerialisedNotSupported=Field "{0}" is specified as an Object (non-serialised). JPOX doesnt currently support the persistence of non-serialised Object fields.

ReferenceMapping.NotValidImplementation=Field "{0}" is a reference field (interface/Object) of type {1} but JPOX is unable to assign an object of type "{2}" to this field. You can only assign this field to a type specified by the "implementation-classes" extension attribute.

DatastoreMapping.ResolveEntity=resolveEntity({0}, {1})

#
# DatastoreMapping
#
DatastoreMapping.FileNonExistent=Datastore Mapping mappings have been defined to be in file "{0}" yet this file doesnt exist.
DatastoreMapping.ErrorReadingFile=Datastore Mapping mappings are defined to be in file "{0}" but there was an error reading this file : {1}
DatastoreMapping.MappingNotFound=Datastore Mapping mapping class "{0}" was not found. Please check the mapping file class specifications and your CLASSPATH. The class must be in the CLASSPATH.
DatastoreMapping.FileNotInClassPath=Datastore Mapping mappings have been defined to be in file "{0}" yet this file can't be found in the classpath.

#
# Extents
#
Extent.NoSubclassesWarning=Query over Extent will never return results without including subclasses : extent= {0}, class={1}

#
# Queries
#
Query.NoPMSpecified=Attempt to create a Query without a PersistenceManager.
Query.PMIsClosed=PersistenceManager that was used to generate the Query is closed!
Query.Unmodifiable=This query is in an unmodifiable state. It's structure cannot be changed

Query.ClassNameNotFoundError=The Query contains a class-name "{0}" (candidate class, result class, parameter, or variable) yet this cannot be resolved. Please check the name, and the imports for the Query.
Query.ResultClass.NoDefaultConstructorError=Query has been specified with a result class {0} which doesn't have a default constructor. All result classes MUST have a default constructor.
Query.NoPersistenceManagerError=Query has no associated PersistenceManager
Query.InvalidParameterListError=Query has an invalid parameter list "{0}"
Query.IllegalParameterNameError=Query has an illegal parameter name "{0}"
Query.DuplicateParameterNameError=Query has a duplicate parameter name "{0}"
Query.InvalidVariableListError=Query has an invalid variable list "{0}"
Query.IllegalVariableNameError=Query has an illegal variable name "{0}"
Query.ConflictingVariableNameError=Query has a variable name "{0}" which conflicts with a parameter name
Query.DuplicateVariableNameError=Query has a duplicate variable name "{0}"
Query.IncorrectNumberOfParametersError=Query requires {0} parameters, yet {1} have been provided.
Query.InvalidNullArgumentForPrimitiveParameter=The parameter {0} expected the argument value of primitive type {1}.

Query.DeletePersistent.OrderingSpecifiedError=Query has been specified to delete persistent objects, yet ordering has been specified. You cannot specify the ordering on such a deletion query.
Query.DeletePersistent.GroupingSpecifiedError=Query has been specified to delete persistent objects, yet grouping has been specified. You cannot specify the grouping on such a deletion query.
Query.DeletePersistent.ResultSpecifiedError=Query has been specified to delete persistent objects, yet the result has been specified. You cannot specify the result on such a deletion query.
Query.DeletePersistent.ResultClassSpecifiedError=Query has been specified to delete persistent objects, yet the resultClass has been specified. You cannot specify the resultClass on such a deletion query.
Query.DeletePersistent.ResultRangeSpecifiedError=Query has been specified to delete persistent objects, yet the result range has been specified. You cannot specify the result range on such a deletion query.
Query.DeletePersistent.UniqueSpecifiedButMultipleResults=Query has been specified with "unique" and to delete persistent objects, however the query implies the deletion of more than 1 object. You should remove the "unique" specification if you want to delete these objects.

Query.ResultClassSimpleButMultipleFields=The Query will return multiple fields yet the ResultClass has been set to a simple type ({0}). These are inconsistent.
Query.ResultClassSimpleButWrongType=The Query will return a single field but it is not of a consistent type as the ResultClass ({0}) : It is {1}
Query.ResultClassInvalid=Query was required to return objects of type "{0}" yet it was impossible to create objects of this type. Check that the result class is valid for JDO.
Query.ResultClassHasUnsettableField=Query needs to return objects of type "{0}" but it was impossible to set the field "{1}" type "{2}". The field should have either a public set/put method, or be public.
Query.ResultClassNotCreatable=Query needs to return objects of type "{0}" but it was impossible to create a new instance of this type. The result class needs a no-args constructor.

Query.ResultClass.ConstructorNotAvailable=Result Class "{0}" doesnt have a public constructor with args of types {1}
Query.ResultClass.SetMethodNotAvailable=Result Class "{0}" doesnt have a public method "void {1}({2})".
Query.ResultClass.PutMethodNotAvailable=Result Class "{0}" doesnt have a public method "void {1}(Object, Object)".
Query.ResultClass.PublicFieldNotAvailable=Result Class "{0}" doesnt have a public field "{1}"
Query.ResultClassNotCaseInsensitive=Result Class query field names are not case sensitive. It does not allow fields with same name, but in a different case. For instance, the field "{0}" is conflicting.

#
# JDOQL
#
JDOQL.ParameterBoundToDifferentPM=Parameter for query ("{0}") is bound to a different PersistenceManager than this query!
JDOQL.Statement.Precompile=JDOQL Query : Precompiling "{0}"
JDOQL.Statement.Summary=JDOQL Query : "{0}"
JDOQL.Statement.CompileTime=JDOQL Query : Compile Time = {0} ms
JDOQL.ExtentNotQueryableError=Extent not queryable for class {0}
JDOQL.NoCandidateClassError=No candidate class provided for JDOQL query
JDOQL.InvalidExpressionError=The JDOQL query contains an invalid expression
JDOQL.FilterExpressionNotBooleanError=The JDOQL query filter "{0}" doesn't yield a boolean result
JDOQL.InvalidOrderExpressionError=The JDOQL query order "{0}" is invalid
JDOQL.InvalidOrderDirectionError=The JDOQL query order "{0}" direction is invalid. Should be either "ascending" or "descending".
JDOQL.RequiredParameterNotProvidedError=The JDOQL query requires a parameter "{0}" yet this hasn't been provided.
JDOQL.RequiredQueryParameterNotDeclared=The JDOQL query includes a parameter "{0}" yet this hasn't been declared in the parameters.
JDOQL.IncorrectNumberOfParametersError=The JDOQL query requires {0} parameters, yet only {1} have been provided.
JDOQL.VariableBindError=Error binding "{0}" to "{1}" since it was previously bound to "{2}".
JDOQL.VariableNotBoundError=Variable "{0}" has not been bound to the query!
JDOQL.ExecutionError=Error executing JDOQL query "{0}" : {1}.
JDOQL.ClassNotFound=Class "{0}" used in cast operation could not be found. Please make sure that this class is contained in the CLASSPATH and it's declared in query imports.
JDOQL.RangeNeedsLiteralExpression=The range {0} expression accepts only Literal values. Either define it as parameter or a literal. The current value is {1}.
JDOQL.RangeLiteralExpressionNumberOnly=The range {0} expression expects a number, but it currently is {1}.

JDOQL.IdentifierIsJDOQLKeyword=Query contains the identifier "{0}", yet this is a JDOQL keyword. The query is invalid.
JDOQL.QueryContainsOutOfOrderKeyword=Query contains a JDOQL keyword ("{0}") that is out of order. Keywords can only be used in a defined order.

JDOQL.SingleString.NoSelectStart=JDOQL Single-String query should always start with SELECT
JDOQL.SingleString.KeywordWithIllegalValue=JDOQL Single-String query has been specified with keyword "{0}" but with illegal following value "{1}"
JDOQL.SingleString.KeywordWithoutValue=JDOQL Single-String query has been specified with keyword "{0}" but has no value specified. Should have "{1}" specified after "{0}".
JDOQL.SingleString.ExpectedKeywordAfter=JDOQL Single-String expects the keyword "{0}" after the keyword "{1}"
JDOQL.SingleString.ClassNotFound=JDOQL Single-String query has been specified with a class "{0}" which could not be found. Please make sure that this class is contained in the CLASSPATH

JDOQL.MixedParametersInvalid=Query has had some parameter(s) declared ("{0}"), yet also has at least 1 implicit parameter ("{1}"). This is invalid. Parameters must either be all explicit (declared), or all implicit (specified using a : prefix).
JDOQL.MixedVariablesInvalid=Query has had some variable(s) declared ("{0}"), yet also has at least 1 implicit variable ("{1}"). This is invalid. Variables must either be all explicit (declared), or all implicit.
JDOQL.ImplicitParameterWithNoValue=JDOQL Query has been specified with an implicit parameter "{0}" (parameter position {1}) yet there is no parameter value specified for this when the query was executed!
JDOQL.SpecifiedClassNotFound=Unable to find the class for "{0}". Please check that this class is accessible in the CLASSPATH.

JDOQL.SpecifiedFieldNotFound=Unable to find the field "{0}" in the candidate class. It is possible that this field is a field in a subclass, but it is illegal to reference fields directly when they are in a subclass.
JDOQL.FieldInOrderingNotSpecifiedInGrouping=The ordering has a field expression "{0}" that doesnt appear in the grouping. Any ordering specification has to be present in the grouping when grouping is specified
JDOQL.FieldInHavingNotSpecifiedInGrouping=The having clause has a field expression "{0}" that doesnt appear in the grouping. Any having specification has to be present in the grouping when grouping is specified
JDOQL.FieldInResultNotSpecifiedInGrouping=The result clause has a field expression "{0}" that doesnt appear in the grouping. Any result specification has to be present in the grouping when grouping is specified
JDOQL.HavingExpressionNotBoolean="HAVING" expression "{0}" is not a valid boolean expression

JDOQL.ResultClassFieldTypeMismatch=JDOQL query has a result field "{0}" of type "{1}" yet the field in the result class has type "{2}"
JDOQL.ResultClassFieldSetterNotFound=JDOQL query defines a result class "{0}" but there is no way of setting the field "{1}"

JDOQL.NewObject.ClassNotFound=Use of "new" in JDOQL queries must be followed by a valid class name, yet {0} is not found. Please check the imports for this query.
JDOQL.NewObject.InvalidSyntax=Use of "new" in JDOQL queries must be followed by a class name and the constructor arguments, yet isn't in "{0}"

JDOQL.InvalidAssignmentOperator=Query ("{0}") has been specified with an assignment ("=") yet this is invalid in JDOQL. Perhaps you meant to use '==' to compare two objects ?

#
# Query Candidates
#
Candidates.CollectionCantBeNull=Candidates collection is null.
Candidates.ExtentCantBeNull=Candidates extent is null.
