################################################################################
# Copyright (c) 14-Jun-2004 Andy Jefferson and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the JPOX License v1.0
# which accompanies this distribution.
#
# Contributors :
#     ...
#
# Resources for org.jpox.metadata package
# Version : $Revision: 1.55.2.1 $
################################################################################
#
# Migrator Messages
#
MetaData.Migrator.Title=JPOX Meta-Data Migrator
MetaData.Migrator.Title.2=-----------------------
MetaData.Migrator.Help.Usage=Usage:  org.jpox.metadata.MetaDataMigrator [options] [jdo-files]
MetaData.Migrator.Help.Options.0=    Where [options] can be :
MetaData.Migrator.Help.Options.1=    -indent {size}   : No of blanks used for indenting
MetaData.Migrator.Help.Options.2=    -v               : Turn on verbose output
MetaData.Migrator.Help.Options.3=    -help            : This help information
MetaData.Migrator.NoFiles.Error=No JDO Meta-Data files have been specified.
MetaData.Migrator.ProcessingFile=Processing Meta-Data file {0} ... 
MetaData.Migrator.ProcessedFile= done.
MetaData.Migrator.IndentSize=Meta-Data file indent size = {0}
MetaData.Migrator.ChangeExtensionTagToAttribute=Changing extension tag {0} to attribute {1}
MetaData.Migrator.ChangeExtensionTagToElement=Changing extension tag {0} to element {1}

#
# Parser Messages
#
MetaData.Parser.HandlerPluginNotFound=MetaData handler plugin "{0}" was not found. Please check your CLASSPATH and plugin specification.
MetaData.Parser.HandlerCreateError=Error creating handler of type "{0}" for metadata parsing : {1}
MetaData.Parser.ParseUsingHandler=Parsing MetaData file "{0}" using handler "{1}" (validation="{2}")

MetaData.Parser.NullFile=Attempt to parse file which was null!
MetaData.Parser.CannotOpenFileError=Error opening the Meta-Data file "{0}"
MetaData.Parser.CannotReadInput=Error reading the Meta-Data input "{0}"

MetaData.Parser.StartElement=Starting parse of element "{0}" (depth="{1}")
MetaData.Parser.EndElement=Ending parse of element "{0}" (depth="{1}")
MetaData.Parser.InvalidParentTag.Error=Tag "{0}" cannot have the parent tag "{1}" : should be {2}
MetaData.Parser.UnknownTag.Error=Unknown tag : "{0}"
MetaData.Parser.LineError=MetaData Parser encountered an error in file "{0}" at line {1} : {2} - Please check your specification of DTD and the validity of the MetaData XML that you have specified.
MetaData.Parser.ColumnError=MetaData Parser encountered an error in file "{0}" at line {1}, column {2} : {3} - Please check your specification of DTD and the validity of the MetaData XML that you have specified.
MetaData.Parser.ErrorCause=Parser error with file "{0}" has cause {1}
MetaData.Parser.ExpectedValueInAttribute=A value is expected in the attribute "{0}" for "{1}" in element "{2}". 

MetaData.RegisterClassWithoutMetaData=Registering class "{0}" as not having MetaData.
MetaData.DeregisterClassWithoutMetaData=Deregistering class "{0}" as not having MetaData - metadata now being added

MetaData.AnnotationManagerNotFound=No manager for annotations was found in the CLASSPATH so all annotations are ignored.

#
# File MetaData
#
MetaData.File.NotFoundForClassError=MetaData of type "{0}" for class "{1}" not found
MetaData.File.NotFoundForClassAtLocationError=MetaData of type "{0}" for class "{1}" NOT found at {2}
MetaData.File.NotFoundForQueryAtLocationError=MetaData for query {0} NOT found at {1}
MetaData.File.NotFoundForSequenceAtLocationError=MetaData for sequence {0} NOT found at {1}
MetaData.File.FoundClass=MetaData of type "{0}" for class "{1}" will use {2}
MetaData.File.FoundQuery=MetaData for query {0} will use {1}
MetaData.File.FoundSequence=MetaData for sequence {0} will use {1}
MetaData.File.ParseError=Failure to parse MetaData file {0}

#
# Package MetaData
#
MetaData.Package.NameNotSpecified=The package name in empty in MetaData file {0}.

#
# Class MetaData
#
MetaData.Class.NameNotSpecified=The package {0} has an empty MetaData specified for a class name. Please check the file {1}.

MetaData.Class.NotEnhancedError=Found Meta-Data for class {0} but this class is not enhanced!! Please enhance the class before running JPOX.
MetaData.Class.AddingUnspecifiedField=Adding Meta-Data for field {0} in class {1} since it didn't appear in the Meta-Data definition.
MetaData.Class.NameNotSpecified.Error="class" Meta-Data element for package {0} needs a 'name' attribute.

MetaData.Class.NonStaticInnerClassNotPersistable=Class "{0}" has been specified to be PersistenceCapable yet is an inner class and is not static. Non-static inner classes cannot be PersistenceCapable.

MetaData.Class.SingleFieldIdentityUsed=Class {0} specified to use "application identity" but no "objectid-class" was specified. Reverting to {1}
MetaData.Class.SingleFieldIdentityInvalid=Class {0} has application-identity and no objectid-class specified yet has {1} primary key fields. Unable to use SingleFieldIdentity.
MetaData.Class.SingleFieldIdentityInvalidType=Class {0} has application-identity, no objectid-class and 1 PK field, but the field is of an invalid type {1} for SingleFieldIdentity. You are allowed to use short, Short, int, Integer, long, Long, byte, Byte, char, Character, or String types.

MetaData.Class.UsingDefaultClassLoaderResolver=No class loader specified for loading of classes associated with MetaData for class {0}. Using the default ClassLoader.
MetaData.Class.AlreadyPopulatedError=Cannot populate the class {0} since it is already populated.
MetaData.Class.NotInitialisedError=Meta-Data hasnt been initialised for the class {0}.
MetaData.Class.NotPopulatedError=Meta-Data hasnt been populated for the class {0}.
MetaData.Class.DeclaredFieldNotFoundError=Class {0} has field {1} declared in MetaData, but this field doesn't exist in the class!
MetaData.Class.PopulatingMetaData=Populating Meta-Data for class {0}.
MetaData.Class.InitialisingMetaData=Initialising Meta-Data for class {0}.

MetaData.Class.PrimaryKeyNotSpecifiedError=Class {0} has been specified with an object-id class {1} yet no fields have been identified as primary key fields. Please notate using the "primary-key" tag against the fields that should be considered part of the primary key.

MetaData.Class.PrimaryKeyFieldsFoundButNotUsingApplicationIdentity=Class {0} has been specified with {1} primary key fields, but this class is using {2} identity and should be application identity.

MetaData.Class.ObjectIdClass.ClassNotFoundError=Class {0} has been specified with an object-id class {1}. This class cannot be found. Please check your specification and/or CLASSPATH.
MetaData.Class.ClassNotFoundError=Class {0} has MetaData yet the class cant be found. Please check your CLASSPATH specifications.
MetaData.Class.PersistenceCapableSuperclass.NotFoundError=Class {0} has a persistence-capable-superclass {1} which is not found.
MetaData.Class.PersistenceCapableSuperclass.IsNotSuperclassError=Class {0} has a persistence-capable-superclass {1} which is NOT a superclass of the class.
MetaData.Class.PersistenceCapableSuperclass.IsNotPCError=Class {0} has a persistence-capable-superclass {1} which is not Persistence-Capable (no Meta-Data found).
MetaData.Class.PersistenceCapableSuperclass.NoSuperclassMetaDataError=Class {0} has the persistence-capable-superclass {1}, but there is no metadata existing for the superclass.
MetaData.Class.PersistenceCapableSuperclass.ObjectIdClassDiffersFromSuperclassError=Class {0} has the persistence-capable-superclass {1}, but defines a different objectid-class than its superclass. No objectid-class should be specified because the superclasses id is always used.
MetaData.Class.PersistenceCapableSuperclass.ObjectIdClassSpecifiedWarning=Class {0} has the persistence-capable-superclass {1} however it has been specified with an objectid-class. No objectid-class should be specified because the superclasses id is always used.
MetaData.Class.PersistenceCapableSuperclass.InvalidDefinition=The persistence-capable-superclass for class {0} must be class {1}, NOT class {2}.
MetaData.Class.PersistenceCapableSuperclass.ClassNotFoundError=The persistence-capable-superclass {1} for class {0} cant be found. Please check your CLASSPATH specifications.
MetaData.Class.PersistenceCapableSuperclass.Set=The class "{0}" has had its persistence-capable-superclass set to "{1}" - it wasnt specified in the MetaData.
MetaData.Class.DuplicateFieldError=Class {0} already has a field with the name {1} defined.

MetaData.Class.NoSuperclassYetSuperclassIsPC=Class "{0}" has not been declared with a persistence-capable-superclass, yet it has a superclass "{1}" that IS persistence capable. Please correct this error.
MetaData.Class.UsePoidGeneratorDeprecated=Class "{0}" has been specified with the attribute "use-poid-generator". This is no longer supported. Instead you should use the <field> attribute "value-strategy" for all fields that require their values populating.

MetaData.Class.IdentityTypeNotEqualsSuperClassIdentityType=Identity Type in class "{0}" is not the same as the Identity Type declared in super class.
MetaData.Class.IdentityStrategyNotEqualsSuperClassIdentityStrategy=Datastore-identity strategy in class "{0}" ("{1}") is not the same as the Datastore-Identity strategy declared in the super class(es) ("{2}").

#
# Implements
#
MetaData.Implements.ClassNotFoundError=Class {0} has MetaData with implements {1} yet the class cant be found. Please check your CLASSPATH specifications.

#
# Inheritance
#
MetaData.Class.InheritanceStrategyInvalidError=Class "{0}" has been specified with an inheritance strategy of "{1}" yet only "{2}" is supported currently
MetaData.Class.Inheritance.NoSuperclassError=Class "{0}" has been specified with an inheritance strategy of "superclass-table", yet no superclass exists or none exists with its own table!
MetaData.Class.Inheritance.NoSuperclassDiscriminator=Class "{0}" has been specified to use an inheritance strategy of "superclass-table", persisting to the table of class {1}, however this class doesn't have a discriminator specified.
MetaData.Class.Inheritance.NoSuperclassDiscriminatorColumn=Class "{0}" has been specified to use an inheritance strategy of "superclass-table", persisting to the table of class {1}, however this class doesn't have a discriminator column specified.
MetaData.Class.Inheritance.NoDiscriminatorValue=Class "{0}" has been specified to persist to table of class "{1}" using discriminator column {2}. No discriminator value has been specified for this class!
MetaData.Class.Inheritance.NoDiscriminatorValueForValueMap=Class "{0}" has a discriminator strategy of "value-map" but has no value. Will use the name of the class since nothing else is available!

#
# Field MetaData
#
MetaData.Field.UsingSystemClassLoader=No class loader specified for loading of classes associated with MetaData for field "{0}" of class "{1}". Using the System ClassLoader.
MetaData.Field.PopulateWithNullFieldError=Cannot populate the field "{0}" of the class "{1}" with a null field.
MetaData.Field.AlreadyPopulatedError=Cannot populate the field "{0}" of class "{1}" since it is already populated.
MetaData.Field.AlreadyInitialisedError=Cannot update the field "{0}" of class "{1}" since it is already initialised.
MetaData.Field.NotPersistentWithIllegalAttributesError=Error in MetaData for field "{0}" in class "{1}" : this is declared as {2} with "persistence-modifier={3}" yet has either "default-fetch-group=true" or "primary-key=true" specified! These should be false.
MetaData.Field.DependentVsContainerDependentError=Error in MetaData for field "{0}" in class "{1}" : this is declared with a "dependent" attribute, but it is a collection, array or map field for which dependency must be declared in an enclosed "array", "collection" or "map" tag, e.g. as "dependent-element" (for collections)   
MetaData.Field.InvalidArrayType=Cannot persist field "{0}" of class "{1}" since it is of an array type that is not supported by JPOX. Please consider making this a Collection field.
MetaData.Field.DuplicateField=Field "{0}" has already been specified for class "{1}", yet has duplicate definition.
MetaData.Field.ClassNameInvalid=Class "{0}" has field "{1}" specified to be from class "{2}" but this class could not be found!
MetaData.Field.ClassNotSuperclass=Class "{0}" has field "{1}" specified to be from class "{2}" but this class is not a superclass of the given class! You can only override fields in PersistenceCapable superclasses
MetaData.Field.MappedByInvalid=Class "{0}" has field "{2}" with "mapped-by" specified as "{2}". This field doesnt exist in the target of the relation ("{3}")!!
MetaData.Field.ImplementationClassInvalid=Class "{0}" has field "{1}" with "implementation-classes" specified yet the implementation class "{2}" is not found!!
MetaData.Field.PopulateWithWrongValue=Cannot populate the field "{0}" of the class "{1}" with a the value "{2}" for the property "{3}".

#
# Column MetaData
#
MetaData.Column.InvalidJDBCType=A column has been specified with a jdbc-type of "{0}". This is invalid. Either the specified type is not a valid type defined in the java.sql.Types class, or it is not supported by JPOX.

#
# Embedded MetaData
#
MetaData.Embedded.PC.UnsupportedType=Field "{0}" is of type "{1}" yet has been specified as embedded. JPOX doesnt support embedding of this type. Your embedded type must be PersistenceCapable.
MetaData.Embedded.Collection.UnsupportedType=Field "{0}" is a collection with elements of type "{1}" yet has been specified as the element being embedded. Your embedded type must be PersistenceCapable.
MetaData.Embedded.MapKey.UnsupportedType=Field "{0}" is a map with keys of type "{1}" yet has been specified as the key being embedded. Your embedded type must be PersistenceCapable.
MetaData.Embedded.MapValue.UnsupportedType=Field "{0}" is a map with values of type "{1}" yet has been specified as the value being embedded. Your embedded type must be PersistenceCapable.
MetaData.Embedded.AddingUnspecifiedField=Adding Meta-Data for field "{0}" of class "{1}" embedded in class "{2}" since it didn't appear in the <embedded> Meta-Data definition.
MetaData.Embedded.Collection.NoJoinTable=Field "{0}" is a collection of elements of type "{1}" declared as embedded. No <join> has been specified. You cannot embed elements of this type without a join table since they will be embedded in the join table.
MetaData.Embedded.MapKey.NoJoinTable=Field "{0}" is a map with keys of type "{1}" declared as embedded. No <join> has been specified. You cannot embed keys of this type without a join table since they will be embedded in the join table.
MetaData.Embedded.MapValue.NoJoinTable=Field "{0}" is a map with values of type "{1}" declared as embedded. No <join> has been specified. You cannot embed values of this type without a join table since they will be embedded in the join table.

#
# Join MetaData
#
MetaData.Join.TableNotValidWithinField=Field "{0}" has <join table="...">. The attribute "table" is not applicable within <join> when it is specified under <field>.

#
# Collection MetaData
#
MetaData.Collection.IsNotCollectionError=Field "{0}" in class "{1}" has been defined with "collection" MetaData yet is not a Collection Field.
MetaData.Collection.ElementTypeNotSpecifiedError=Field "{0}" in class "{1}" has been defined as a Collection but the element type has not been specified!
MetaData.Collection.ElementTypeNotFoundError=Field "{0}" in class "{1}" has been defined as a Collection with elements of type {2}. This element type is not found.
MetaData.Collection.ElementTypeResolved=Field "{0}" in class "{1}" has been defined as a Collection with elements of type {2}. This type has been resolved to {3}
MetaData.Collection.NonPCWithoutJoin=Field "{0}" is a collection of (non-serialised) elements of type "{1}" yet no <join> has been specified. You must have a join table to store a collection of non-PersistenceCapable elements, or serialise the collection.

#
# Array MetaData
#
MetaData.Array.IsNotArrayError=Field "{0}" in class {1} has been defined with "array" MetaData yet is not an array field.
MetaData.Array.NonPCWithoutJoin=Field "{0}" is an array of (non-serialised) elements of type "{1}" yet no <join> has been specified. You must have a join table to store an array of non-PersistenceCapable elements, or serialise the array.

#
# Map MetaData
#
MetaData.Map.IsNotMapError=Field "{0}" in class "{1}" has been defined with "map" MetaData yet is not a Map Field.
MetaData.Map.KeyTypeNotSpecifiedError=Field "{0}" in class "{1}" has been defined as a Map but the key type is not specified!
MetaData.Map.KeyTypeNotFoundError=Field "{0}" in class {1} has been defined as a Map with keys of type {2}. This key type is not found.
MetaData.Map.KeyTypeResolved=Field "{0}" in class "{1}" has been defined as a Map with keys of type {2}. This key type has been resolved to {3}.
MetaData.Map.ValueTypeNotSpecifiedError=Field "{0}" in class "{1}" has been defined as a Map but the value type is not specified!
MetaData.Map.ValueTypeNotFoundError=Field "{0}" in class "{1}" has been defined as a Map with values of type {2}. This value type is not found.
MetaData.Map.ValueTypeResolved=Field "{0}" in class "{1}" has been defined as a Map with values of type {2}. This value type has been resolved to {3}.
MetaData.Map.KeyTypeReferenceCannotBeEmbedded=Field "{0}" has been specified with a key-type of "{1}" which is a reference type, and that it should be embedded into a join table. JPOX doesnt support embedding of reference types into join tables.
MetaData.Map.ValueTypeReferenceCannotBeEmbedded=Field "{0}" has been specified with a value-type of "{1}" which is a reference type, and that it should be embedded into a join table. JPOX doesnt support embedding of reference types into join tables.

#
# Query MetaData
#
MetaData.Query.QueryNameNotSpecifiedError=Query has been specified without a name !

#
# Sequence MetaData
#
MetaData.Sequence.SequenceNameNotSpecifiedError=Sequence has been specified without a name !

#
# Version MetaData
#
MetaData.Version.StrategyNotSpecifiedError=The strategy was not specified !

#
# Identity MetaData
#
MetaData.Identity.StrategyNotSpecifiedError=The strategy was not specified !
MetaData.Identity.FactoryClassNotFound=The factory-class {0} was not found !
MetaData.Identity.FactoryClassIsNotIdGenerator=The factory-class {0} does not implement javax.jdo.IdGenerator !

#
# Extendable MetaData
#
MetaData.Extendable.Invalid=Invalid specification of <extension> tag. The vendor-name ({0}), key ({1}) and value ({2}) must ALL be specified.


MetaData.Reference.NoImplementationClassesFound=Field "{0}" is declared as a reference type (interface/Object) but no implementation classes of "{1}" have been found!
